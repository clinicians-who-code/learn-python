---
title: "Python basics"
subtitle: Module 1
author: "Mark Bailey"
format: revealjs
logo: /images/cwc-logo.png
css: /slides.css
title-slide-attributes:
    data-background-image: /images/python-scales.jpg
---

# In the morning

## Getting up

- Turn off alarm
- Get out of bed

## Breakfast

- Eat eggs
- Drink coffee

# In the evening

## Dinner

- Eat spaghetti
- Drink wine

## Going to sleep

- Get in bed
- Count sheep

Variables and Data Types:

Variables are used to store data in a program. Understanding data types such as integers, floats, strings, booleans, lists, tuples, dictionaries, and sets is crucial.
Variables allow you to manipulate and operate on data within your program.

NO SPACES


## Basic Operations and Expressions:

Python supports various operations like arithmetic operators (+, -, *, /), comparison operators (==, !=, <, >), logical operators (and, or, not), etc.
Expressions combine variables, values, and operators to perform a specific computation.

## Control Flow:

Control flow structures such as if statements, for loops, and while loops allow you to control the execution of your code based on certain conditions.
Understanding how to use these structures enables you to write code that performs different actions under different circumstances.

## Functions:

Functions are blocks of reusable code that perform a specific task. They help in organizing code and making it more modular.
Understanding how to define, call, and pass arguments to functions is essential.

## Data Structures:

Python provides built-in data structures like lists, tuples, dictionaries, and sets. Understanding these data structures and their properties is crucial for efficient data manipulation.
Knowledge of when and how to use each data structure based on the requirements of your program is important.


## Error Handling:

Learning about exception handling in Python helps you deal with errors that may occur during program execution. This includes using try-except blocks to handle exceptions gracefully.
Input and Output:

Knowing how to read input from users (using input()) and display output (using print()) is fundamental for building interactive programs.
Modules and Packages:

Python's modular design allows you to organize code into modules and packages. Understanding how to import modules and use functions from external libraries expands the capabilities of your programs.

## File Handling:

Python provides various functions for reading from and writing to files. Understanding file handling operations is essential for working with external data.
Object-Oriented Programming (OOP) (Optional for beginners but important for intermediate level):